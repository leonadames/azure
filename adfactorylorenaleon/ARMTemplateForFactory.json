{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfactorylorenaleon"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"Link_services_BronzetoSilver_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Link_services_BronzetoSilver'"
		},
		"Linked_Bronze_To_Gold_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Linked_Bronze_To_Gold'"
		},
		"AzureDataLakeStorage1_linkserviceslorenaleon_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsg2lorenaleon.dfs.core.windows.net/"
		},
		"AzureKeyVault1lorenaleon_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://key-taller-lorena-leon.vault.azure.net/"
		},
		"FileServer1link_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\archive"
		},
		"FileServer1link_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "franyleon@hotmail.com"
		},
		"Link_services_BronzetoSilver_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsg2lorenaleon.dfs.core.windows.net/"
		},
		"Linked_Bronze_To_Gold_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsg2lorenaleon.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Limpieza_Data",
						"description": "Traer la info de las ciudades principales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {
									"Nombre_Order_Filtrado": "'Order_Filtrado'",
									"Nombre_OrderLine_Filtrado": "'OrderLine_Filtrado'",
									"Nombre_Inventario_Ordenado": "'Inventario_Ordenado'"
								},
								"datasetParameters": {
									"LeerDatasetOrder": {},
									"LeerDatasetOrderLine": {},
									"LeerDatasetInventario": {},
									"sinkorderfiltradooutput": {
										"Nombre_Order_Filtrado": "Order_Filtrado"
									},
									"sink1orderlinefiltrado": {},
									"sink1sortinventario": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Nombre_Order_Filtrado": {
						"type": "string",
						"defaultValue": "Output_Order_Filtrado"
					},
					"Nombre_OrderLine_Filtrado": {
						"type": "string",
						"defaultValue": "Output_OrderLine_Filtrado"
					},
					"Nobre_Inventario_Ordenado": {
						"type": "string",
						"defaultValue": "Output_Inventario_Ordenado"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_tallerfinal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OnpremisetoCloud-Inventory_v2",
						"description": "Traer el archivo de Inventario  del servidor a la nube",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Inventory_v2",
								"type": "DatasetReference",
								"parameters": {
									"Nombre_Archivo_Inventario": {
										"value": "@pipeline().parameters.Nombre_Archivo_Inventario",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Datalake_Inventory_v2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OnpremisetoCloud-Orden",
						"description": "Traer el archivo de Orden del servidor a la nube",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Order_v3",
								"type": "DatasetReference",
								"parameters": {
									"Nombre_Archivo_Order": {
										"value": "@pipeline().parameters.Nombre_Archivo_Order",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Datalake_Order3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OnpremisetoCloud-Orden_Line",
						"description": "Traer el archivo de Orden line del servidor a la nube",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OrderLine_v4",
								"type": "DatasetReference",
								"parameters": {
									"Nombre_Orden_Line": {
										"value": "@pipeline().parameters.Nombre_Orden_Line",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Datalake_Order_line",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Tranformacion data base",
						"description": "Traer la info de las ciudades principales",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "OnpremisetoCloud-Inventory_v2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "OnpremisetoCloud-Orden",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "OnpremisetoCloud-Orden_Line",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {
									"Nombre_Order_Filtrado": "'Order_Filtrado.txt'",
									"Nombre_OrderLine_Filtrado": "'OrderLine_Filtrado'",
									"Nombre_Inventario_Ordenado": "'Inventario_Ordenado'"
								},
								"datasetParameters": {
									"LeerDatasetOrder": {},
									"LeerDatasetOrderLine": {},
									"LeerDatasetInventario": {},
									"sinkorderfiltradooutput": {
										"Nombre_Order_Filtrado": "Order_Filtrado"
									},
									"sink1orderlinefiltrado": {},
									"sink1sortinventario": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Integracion",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Tranformacion data base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {
									"Nombre_Dataset_Final": "'Dataset_Final'"
								},
								"datasetParameters": {
									"OrderFiltrado": {},
									"OrdenLineFiltrado": {},
									"InventarioOrdenado": {},
									"RemoveDuplicates": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Nombre_Archivo_Inventario": {
						"type": "string",
						"defaultValue": "Inventory_v2.csv"
					},
					"Nombre_Orden_Line": {
						"type": "string",
						"defaultValue": "OrderLine_v4.csv"
					},
					"Nombre_Archivo_Order": {
						"type": "string",
						"defaultValue": "Order_v3.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Inventory_v2')]",
				"[concat(variables('factoryId'), '/datasets/Datalake_Inventory_v2')]",
				"[concat(variables('factoryId'), '/datasets/Order_v3')]",
				"[concat(variables('factoryId'), '/datasets/Datalake_Order3')]",
				"[concat(variables('factoryId'), '/datasets/OrderLine_v4')]",
				"[concat(variables('factoryId'), '/datasets/Datalake_Order_line')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_INVENTARIO_ORDENADO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Bronze_To_Gold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Inventario_Ordenado",
						"folderPath": "Silver",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "product.partNumber",
						"type": "String"
					},
					{
						"name": "inventoryType",
						"type": "String"
					},
					{
						"name": "plannerCode",
						"type": "String"
					},
					{
						"name": "inventoryParentType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Bronze_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORDERLINE_FILTRADO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Bronze_To_Gold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrderLine_Filtrado",
						"folderPath": "Silver",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderIdentifier",
						"type": "String"
					},
					{
						"name": "orderLineNumber",
						"type": "String"
					},
					{
						"name": "orderType",
						"type": "String"
					},
					{
						"name": "partNumber",
						"type": "String"
					},
					{
						"name": "createdDate",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "productValue",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "valueCurrency",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Bronze_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORDER_FILTRADO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Bronze_To_Gold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order_Filtrado.txt",
						"folderPath": "Silver",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderIdentifier",
						"type": "String"
					},
					{
						"name": "orderType",
						"type": "String"
					},
					{
						"name": "vendor_organizationIdentifier",
						"type": "String"
					},
					{
						"name": "buyer_organizationIdentifier",
						"type": "String"
					},
					{
						"name": "locationIdentifier",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Bronze_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake_Inventory_v2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_linkserviceslorenaleon",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_linkserviceslorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake_Order3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_linkserviceslorenaleon",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_linkserviceslorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake_Order_line')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_linkserviceslorenaleon",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_linkserviceslorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_Inventario')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_services_BronzetoSilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Inventory_v2.txt",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "product.partNumber",
						"type": "String"
					},
					{
						"name": "location.locationIdentifier",
						"type": "String"
					},
					{
						"name": "inventoryType",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "quantityUnits",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "valueCurrency",
						"type": "String"
					},
					{
						"name": "reservationOrders",
						"type": "String"
					},
					{
						"name": "daysOfSupply",
						"type": "String"
					},
					{
						"name": "shelfLife",
						"type": "String"
					},
					{
						"name": "reorderLevel",
						"type": "String"
					},
					{
						"name": "expectedLeadTime",
						"type": "String"
					},
					{
						"name": "quantityUpperThreshold",
						"type": "String"
					},
					{
						"name": "quantityLowerThreshold",
						"type": "String"
					},
					{
						"name": "daysOfSupplyUpperThreshold",
						"type": "String"
					},
					{
						"name": "daysOfSupplyLowerThreshold",
						"type": "String"
					},
					{
						"name": "expiringThreshold",
						"type": "String"
					},
					{
						"name": "plannerCode",
						"type": "String"
					},
					{
						"name": "velocityCode",
						"type": "String"
					},
					{
						"name": "inventoryParentType",
						"type": "String"
					},
					{
						"name": "class",
						"type": "String"
					},
					{
						"name": "segment",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link_services_BronzetoSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_Order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_services_BronzetoSilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order_v3.txt",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderIdentifier",
						"type": "String"
					},
					{
						"name": "orderType",
						"type": "String"
					},
					{
						"name": "vendor.organizationIdentifier",
						"type": "String"
					},
					{
						"name": "buyer.organizationIdentifier",
						"type": "String"
					},
					{
						"name": "shipFromInstructionLocation.locationIdentifier",
						"type": "String"
					},
					{
						"name": "shipToLocation.locationIdentifier",
						"type": "String"
					},
					{
						"name": "orderStatus",
						"type": "String"
					},
					{
						"name": "createdDate",
						"type": "String"
					},
					{
						"name": "requestedShipDate",
						"type": "String"
					},
					{
						"name": "requestedDeliveryDate",
						"type": "String"
					},
					{
						"name": "plannedShipDate",
						"type": "String"
					},
					{
						"name": "plannedDeliveryDate",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "quantityUnits",
						"type": "String"
					},
					{
						"name": "totalValue",
						"type": "String"
					},
					{
						"name": "orderValueCurrency",
						"type": "String"
					},
					{
						"name": "lineCount",
						"type": "String"
					},
					{
						"name": "totalShippedQuantity",
						"type": "String"
					},
					{
						"name": "exclude",
						"type": "String"
					},
					{
						"name": "sourceLink",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link_services_BronzetoSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_Order_Filtrado_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_services_BronzetoSilver",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Nombre_Order_Filtrado": {
						"type": "string",
						"defaultValue": "Order_Filtrado"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Nombre_Order_Filtrado",
							"type": "Expression"
						},
						"folderPath": "Silver",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link_services_BronzetoSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_Order_Line')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_services_BronzetoSilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrderLine_v4.txt",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link_services_BronzetoSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_final')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Bronze_To_Gold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Gold",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Bronze_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventario_Ordenado')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_services_BronzetoSilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Silver",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link_services_BronzetoSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory_v2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Nombre_Archivo_Inventario": {
						"type": "string",
						"defaultValue": "Inventory_v2.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().Nombre_Archivo_Inventario",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "''",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_Final')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Bronze_To_Gold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Gold",
						"fileSystem": "containerlorena"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Bronze_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrderLine_v4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Nombre_Orden_Line": {
						"type": "string",
						"defaultValue": "OrderLine_v4.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().Nombre_Orden_Line",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "''",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1_linkserviceslorenaleon",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order_v3.txt",
						"folderPath": "Bronze",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderIdentifier",
						"type": "String"
					},
					{
						"name": "orderType",
						"type": "String"
					},
					{
						"name": "vendor.organizationIdentifier",
						"type": "String"
					},
					{
						"name": "buyer.organizationIdentifier",
						"type": "String"
					},
					{
						"name": "shipFromInstructionLocation.locationIdentifier",
						"type": "String"
					},
					{
						"name": "shipToLocation.locationIdentifier",
						"type": "String"
					},
					{
						"name": "orderStatus",
						"type": "String"
					},
					{
						"name": "createdDate",
						"type": "String"
					},
					{
						"name": "requestedShipDate",
						"type": "String"
					},
					{
						"name": "requestedDeliveryDate",
						"type": "String"
					},
					{
						"name": "plannedShipDate",
						"type": "String"
					},
					{
						"name": "plannedDeliveryDate",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "quantityUnits",
						"type": "String"
					},
					{
						"name": "totalValue",
						"type": "String"
					},
					{
						"name": "orderValueCurrency",
						"type": "String"
					},
					{
						"name": "lineCount",
						"type": "String"
					},
					{
						"name": "totalShippedQuantity",
						"type": "String"
					},
					{
						"name": "exclude",
						"type": "String"
					},
					{
						"name": "sourceLink",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1_linkserviceslorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order_v3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1link",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Nombre_Archivo_Order": {
						"type": "string",
						"defaultValue": "Order_v3.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().Nombre_Archivo_Order",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "''",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1link')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orderline_Filtrado')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_services_BronzetoSilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Silver",
						"fileSystem": "containerlorena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link_services_BronzetoSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1lorenaleon",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1lorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1_linkserviceslorenaleon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_linkserviceslorenaleon_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1lorenaleon",
							"type": "LinkedServiceReference"
						},
						"secretName": "pss-keydatalake-taller-lorena-leon"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1lorenaleon",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1lorenaleon')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1lorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1lorenaleon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1lorenaleon_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1link')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\\\\LAPTOP-I3KSF0KM\\C$\\archive\\*",
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1link_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1link_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1lorenaleon",
							"type": "LinkedServiceReference"
						},
						"secretName": "pss-key-taller-lorena-leon"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1lorenaleon",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1lorenaleon')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1lorenaleon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Link_services_BronzetoSilver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Link_services_BronzetoSilver_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Link_services_BronzetoSilver_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_Bronze_To_Gold')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Linked_Bronze_To_Gold_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Linked_Bronze_To_Gold_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1lorenaleon')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Dataset_Order",
								"type": "DatasetReference"
							},
							"name": "LeerDatasetOrder"
						},
						{
							"dataset": {
								"referenceName": "Dataset_Order_Line",
								"type": "DatasetReference"
							},
							"name": "LeerDatasetOrderLine",
							"description": "Import data from Dataset_Order_Line"
						},
						{
							"dataset": {
								"referenceName": "Dataset_Inventario",
								"type": "DatasetReference"
							},
							"name": "LeerDatasetInventario"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Dataset_Order_Filtrado_Output",
								"type": "DatasetReference"
							},
							"name": "sinkorderfiltradooutput",
							"description": "salida del archivo order filtrado por ciudades principales"
						},
						{
							"dataset": {
								"referenceName": "Orderline_Filtrado",
								"type": "DatasetReference"
							},
							"name": "sink1orderlinefiltrado"
						},
						{
							"dataset": {
								"referenceName": "Inventario_Ordenado",
								"type": "DatasetReference"
							},
							"name": "sink1sortinventario"
						}
					],
					"transformations": [
						{
							"name": "FiltroCiudadesPrincipales"
						},
						{
							"name": "FiltrarProductValue",
							"description": "Traer los registro que tengan un valor mayor a 0"
						},
						{
							"name": "Orderby"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "Agrupar"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Nombre_Order_Filtrado as string ('Order_Filtrado.txt'),",
						"     Nombre_OrderLine_Filtrado as string ('OrderLine_Filtrado'),",
						"     Nombre_Inventario_Ordenado as string ('Inventario_Ordenado')",
						"}",
						"source(output(",
						"          orderIdentifier as string,",
						"          orderType as string,",
						"          {vendor.organizationIdentifier} as string,",
						"          {buyer.organizationIdentifier} as string,",
						"          {shipFromInstructionLocation.locationIdentifier} as string,",
						"          {shipToLocation.locationIdentifier} as string,",
						"          orderStatus as string,",
						"          createdDate as string,",
						"          requestedShipDate as string,",
						"          requestedDeliveryDate as string,",
						"          plannedShipDate as string,",
						"          plannedDeliveryDate as string,",
						"          quantity as string,",
						"          quantityUnits as string,",
						"          totalValue as string,",
						"          orderValueCurrency as string,",
						"          lineCount as string,",
						"          totalShippedQuantity as string,",
						"          exclude as string,",
						"          sourceLink as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LeerDatasetOrder",
						"source(output(",
						"          orderIdentifier as integer,",
						"          orderLineNumber as short,",
						"          orderType as string,",
						"          {product.partNumber} as string,",
						"          {shipFromInstructionLocation.locationIdentifier} as string,",
						"          {shipToLocation.locationIdentifier} as string,",
						"          status as string,",
						"          createdDate as string,",
						"          requestedShipDate as string,",
						"          requestedDeliveryDate as string,",
						"          plannedShipDate as string,",
						"          plannedDeliveryDate as string,",
						"          quantity as short,",
						"          quantityUnits as string,",
						"          productValue as short,",
						"          value as integer,",
						"          valueCurrency as string,",
						"          shipmentCount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LeerDatasetOrderLine",
						"source(output(",
						"          {product.partNumber} as string,",
						"          {location.locationIdentifier} as string,",
						"          inventoryType as string,",
						"          quantity as string,",
						"          quantityUnits as string,",
						"          value as string,",
						"          valueCurrency as string,",
						"          reservationOrders as string,",
						"          daysOfSupply as string,",
						"          shelfLife as string,",
						"          reorderLevel as string,",
						"          expectedLeadTime as string,",
						"          quantityUpperThreshold as string,",
						"          quantityLowerThreshold as string,",
						"          daysOfSupplyUpperThreshold as string,",
						"          daysOfSupplyLowerThreshold as string,",
						"          expiringThreshold as string,",
						"          plannerCode as string,",
						"          velocityCode as string,",
						"          inventoryParentType as string,",
						"          class as string,",
						"          segment as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> LeerDatasetInventario",
						"LeerDatasetOrder filter({shipToLocation.locationIdentifier}=='FAA - Washington' || {shipToLocation.locationIdentifier}=='MAHD - Boston') ~> FiltroCiudadesPrincipales",
						"LeerDatasetOrderLine filter(productValue>0) ~> FiltrarProductValue",
						"LeerDatasetInventario sort(asc({product.partNumber}, true)) ~> Orderby",
						"Orderby select(mapColumn(",
						"          {product.partNumber},",
						"          inventoryType,",
						"          plannerCode,",
						"          inventoryParentType",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
						"RemoveColumns1 aggregate(groupBy({product.partNumber},",
						"          inventoryType,",
						"          plannerCode,",
						"          inventoryParentType),",
						"     productpartNumber = first({product.partNumber})) ~> Agrupar",
						"FiltroCiudadesPrincipales sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($Nombre_Order_Filtrado)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          orderIdentifier,",
						"          orderType,",
						"          vendor_organizationIdentifier = {vendor.organizationIdentifier},",
						"          buyer_organizationIdentifier = {buyer.organizationIdentifier},",
						"          locationIdentifier = {shipToLocation.locationIdentifier}",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkorderfiltradooutput",
						"FiltrarProductValue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($Nombre_OrderLine_Filtrado)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          orderIdentifier,",
						"          orderLineNumber,",
						"          orderType,",
						"          partNumber = {product.partNumber},",
						"          createdDate,",
						"          quantity,",
						"          productValue,",
						"          value,",
						"          valueCurrency",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1orderlinefiltrado",
						"Agrupar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($Nombre_Inventario_Ordenado)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1sortinventario"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_Order')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_Order_Line')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_Inventario')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_Order_Filtrado_Output')]",
				"[concat(variables('factoryId'), '/datasets/Orderline_Filtrado')]",
				"[concat(variables('factoryId'), '/datasets/Inventario_Ordenado')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ORDER_FILTRADO",
								"type": "DatasetReference"
							},
							"name": "OrderFiltrado"
						},
						{
							"dataset": {
								"referenceName": "DS_ORDERLINE_FILTRADO",
								"type": "DatasetReference"
							},
							"name": "OrdenLineFiltrado"
						},
						{
							"dataset": {
								"referenceName": "DS_INVENTARIO_ORDENADO",
								"type": "DatasetReference"
							},
							"name": "InventarioOrdenado"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json_Final",
								"type": "DatasetReference"
							},
							"name": "RemoveDuplicates"
						}
					],
					"transformations": [
						{
							"name": "JoinxOrdenIDandOrderType"
						},
						{
							"name": "JoinxPartnumber"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Nombre_Dataset_Final as string ('Dataset_Final')",
						"}",
						"source(output(",
						"          orderIdentifier as string,",
						"          orderType as string,",
						"          vendor_organizationIdentifier as string,",
						"          buyer_organizationIdentifier as string,",
						"          locationIdentifier as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> OrderFiltrado",
						"source(output(",
						"          orderIdentifier as string,",
						"          orderLineNumber as string,",
						"          orderType as string,",
						"          partNumber as string,",
						"          createdDate as string,",
						"          quantity as string,",
						"          productValue as string,",
						"          value as string,",
						"          valueCurrency as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> OrdenLineFiltrado",
						"source(output(",
						"          {product.partNumber} as string,",
						"          inventoryType as string,",
						"          plannerCode as string,",
						"          inventoryParentType as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> InventarioOrdenado",
						"OrdenLineFiltrado, OrderFiltrado join(OrdenLineFiltrado@orderIdentifier == OrderFiltrado@orderIdentifier",
						"     && OrdenLineFiltrado@orderType == OrderFiltrado@orderType,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinxOrdenIDandOrderType",
						"JoinxOrdenIDandOrderType, InventarioOrdenado join(partNumber == {product.partNumber},",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinxPartnumber",
						"JoinxPartnumber sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($Nombre_Dataset_Final)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RemoveDuplicates"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ORDER_FILTRADO')]",
				"[concat(variables('factoryId'), '/datasets/DS_ORDERLINE_FILTRADO')]",
				"[concat(variables('factoryId'), '/datasets/DS_INVENTARIO_ORDENADO')]",
				"[concat(variables('factoryId'), '/datasets/Json_Final')]"
			]
		}
	]
}